version: '3.9'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ecommerce}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    restart: unless-stopped

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    depends_on:
      - db
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_DATABASE=${DB_NAME:-ecommerce}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-3600}
      - JWT_ISSUER=${JWT_ISSUER:-amazon-clone-api}
      - JWT_AUDIENCE=${JWT_AUDIENCE:-amazon-clone-frontend}
      - APP_ENV=production
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_NAME=${APP_NAME:-Online Shop}
      - APP_URL=${APP_URL:-https://your-domain.com}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_SECURE=${SMTP_SECURE:-tls}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@your-domain.com}
      - FROM_NAME=${FROM_NAME:-Online Shop}
      - USE_SMTP=${USE_SMTP:-true}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key_here}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "${PORT:-80}:80"
    volumes:
      - ./backend/public:/var/www/html/public
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - php
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    networks:
      - app-network
    environment:
      - VITE_API_URL=${API_URL:-http://localhost/api}
      - VITE_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
      - VITE_DEV_MODE=false
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 