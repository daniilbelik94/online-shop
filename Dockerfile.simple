# Multi-stage build for Railway deployment
FROM node:20-alpine as frontend-builder

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production --no-audit --no-fund
COPY frontend/ ./
RUN npm run build

# PHP backend with Apache
FROM php:8.3-apache

# Install system dependencies and PHP extensions
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    curl \
    libpq-dev \
    zip \
    unzip \
    && docker-php-ext-install \
    pdo \
    pdo_pgsql \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Enable Apache modules
RUN a2enmod rewrite headers

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy backend files
COPY backend/ .

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader

# Copy built frontend
COPY --from=frontend-builder /app/frontend/dist ./public/frontend

# Configure Apache DocumentRoot
RUN sed -i 's|/var/www/html|/var/www/html/public|g' /etc/apache2/sites-available/000-default.conf

# Create .htaccess for URL rewriting and CORS
RUN echo "RewriteEngine On\n\
# API routes\n\
RewriteCond %{REQUEST_URI} ^/api\n\
RewriteCond %{REQUEST_FILENAME} !-f\n\
RewriteCond %{REQUEST_FILENAME} !-d\n\
RewriteRule ^(.*)$ index.php [QSA,L]\n\
\n\
# Frontend routes\n\
RewriteCond %{REQUEST_URI} !^/api\n\
RewriteCond %{REQUEST_URI} !^/uploads\n\
RewriteCond %{REQUEST_FILENAME} !-f\n\
RewriteCond %{REQUEST_FILENAME} !-d\n\
RewriteRule ^(.*)$ frontend/index.html [QSA,L]\n\
\n\
# CORS headers\n\
Header always set Access-Control-Allow-Origin \"*\"\n\
Header always set Access-Control-Allow-Methods \"GET, POST, PUT, DELETE, OPTIONS\"\n\
Header always set Access-Control-Allow-Headers \"Content-Type, Authorization\"" > /var/www/html/public/.htaccess

# Create uploads directory and set permissions
RUN mkdir -p /var/www/html/public/uploads \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/public

# Expose port
EXPOSE 80

# Start Apache
CMD ["apache2-foreground"] 